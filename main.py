import time
import traceback
from menu_navigation import run_menu_loop
from oled_ui import clear
import os
import asyncio

from system_status import status_updater
import threading

def log_error(e):
    with open("error.log", "a") as f:
        f.write(f"{time.ctime()}: {repr(e)}\n")
        traceback.print_exc(file=f)

def start_status_thread():
    t = threading.Thread(target=status_updater, daemon=True)
    t.start()

async def main():
    start_status_thread()
    while True:
        try:
            if os.path.exists("exit.flag"):
                print("üîö –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ñ–ª–∞–≥ –≤—ã—Ö–æ–¥–∞.")
                os.remove("exit.flag")
                break

            await run_menu_loop()
        except KeyboardInterrupt:
            print("‚èπ –í—ã—Ö–æ–¥ –ø–æ Ctrl+C")
            clear()
            break
        except Exception as e:
            print("üí• –ü—Ä–æ–≥—Ä–∞–º–º–∞ —É–ø–∞–ª–∞ —Å –æ—à–∏–±–∫–æ–π, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã")
            traceback.print_exc()
            log_error(e)
            await asyncio.sleep(2)

if __name__ == "__main__":
    asyncio.run(main())
