import subprocess
import time
import os
from pathlib import Path
from esp32_boot import enter_bootloader, exit_bootloader

PORT = "/dev/ttyS0"
FLASH_ARGS = [
    ("bootloader_0x1000.bin", "0x1000"),
    ("firmware_0x10000.bin",  "0x10000"),
    ("partitions_0x8000.bin", "0x8000"),
    ("ota_data_initial_0xe000.bin", "0xe000"),
    # NVS –¥–æ–±–∞–≤–∏–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
]

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: –ø—Ä–æ—à–∏–≤–∫–∞ -> NVS
NVS_MAP = {
    "Universal": "repeater_nvs_0x9000.bin",
    "Master":    "master_nvs_0x9000.bin",
    "Repiater":  "repeater_nvs_0x9000.bin",
    "Sens_SW":   "sw_nvs_0x9000.bin",
    "Sens_OLD":  "sw_nvs_0x9000.bin",
}

ESP_DIR = Path(__file__).parent / "esp"

def flash_firmware(fw_name: str):
    print(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—à–∏–≤–∫—É: {fw_name}")

    if fw_name not in NVS_MAP:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø—Ä–æ—à–∏–≤–∫–∞: {fw_name}")
        return

    # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö .bin —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø—Ä–æ—à–∏–≤–∫–∏
    bin_files = FLASH_ARGS.copy()
    nvs_file = NVS_MAP[fw_name]
    bin_files.append((nvs_file, "0x9000"))

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
    for filename, _ in bin_files:
        path = ESP_DIR / filename
        if not path.exists():
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")
            return

    try:
        print("üîå –ü–µ—Ä–µ–≤–æ–¥ ESP32 –≤ —Ä–µ–∂–∏–º bootloader...")
        enter_bootloader()
        time.sleep(1)

        print("üßπ –û—á–∏—Å—Ç–∫–∞ —Ñ–ª–µ—à–∞...")
        subprocess.run(["esptool.py", "--chip", "esp32", "-b", "460800", "-p", PORT, "erase_flash"], check=True)

        print("üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏...")
        exit_bootloader()
        time.sleep(1)

        print("üîÅ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—Ö–æ–¥ –≤ bootloader...")
        enter_bootloader()
        time.sleep(1)

        print("üì¶ –ó–∞–ø–∏—Å—å –ø—Ä–æ—à–∏–≤–∫–∏:")
        cmd = [
            "esptool.py", "--chip", "esp32", "-b", "460800", "-p", PORT,
            "write_flash", "--flash_mode", "dio", "--flash_freq", "40m", "--flash_size", "4MB"
        ]

        for filename, addr in bin_files:
            full_path = str(ESP_DIR / filename)
            cmd += [addr, full_path]
            print(f"  - {addr}: {filename}")

        subprocess.run(cmd, check=True)

        print("‚úÖ –í—ã—Ö–æ–¥ –∏–∑ bootloader...")
        exit_bootloader()
        print("üéâ –ü—Ä–æ—à–∏–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")

    except subprocess.CalledProcessError as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏: {e}")
